---
- hosts: bardin-haus
  vars_files:
    - vars/bardin-haus.yml
  tasks:
    #- name: set etc/host for hostname
    #  become: true
    #  lineinfile: dest=/etc/hosts line="{{ item.ip }} {{ item.cn }}.{{ bardin_haus_vpn_domain }}"
    #  with_items: "{{ nodes }}"

    #- name: remove nodes
    #  shell: kubectl delete node {{ item.cn }}.{{ bardin_haus_vpn_domain }} || true
    #  with_items: "{{ nodes }}"

    #- name: hostkey scan nodes
    #  shell: grep '{{ item.cn }}.{{ bardin_haus_vpn_domain }} ' ~/.ssh/known_hosts || ssh-keyscan {{ item.cn }}.{{ bardin_haus_vpn_domain }} >> ~/.ssh/known_hosts
    #  with_items: "{{ nodes }}"

    #- name: reset nodes
    #  shell: ssh kangaroo@{{ item.cn }}.{{ bardin_haus_vpn_domain }} sudo kubeadm reset
    #  with_items: "{{ nodes }}"

    #- name: reset kubeadm
    #  become: true
    #  shell: (which kubeadm && kubeadm reset) || true

    #- name: install kube-config
    #  copy: src={{ item }} dest=/var/tmp/{{ item }}
    #  with_items:
    #    - kube-config.yml
    #    - weave-kube-1.10.yml

    #- name: init kubeadm
    #  become: true
    #  shell: kubeadm init --pod-network-cidr 192.168.50.0/24 | tee -a /var/log/kubeadm-init.log

    #- file: dest=/home/{{ ansible_ssh_user }}/.kube owner={{ ansible_ssh_user }} group={{ ansible_ssh_user }}
    #  become: true

    #- name: install kubectl config
    #  become: true
    #  copy: remote_src=true src=/etc/kubernetes/admin.conf dest=/home/{{ ansible_ssh_user }}/.kube/config owner={{ ansible_ssh_user }} group={{ ansible_ssh_user }}

    ## https://www.weave.works/docs/net/latest/kube-addon/#install
    #- name: install network
    #  become: true
    #  shell: KUBECONFIG=/home/{{ ansible_ssh_user }}/.kube/config kubectl apply -f /var/tmp/weave-kube-1.10.yml

    ## https://kubernetes.io/docs/getting-started-guides/kubeadm/#master-isolation
    #- name: allow scheduling on master node
    #  become: true
    #  shell: KUBECONFIG=/home/{{ ansible_ssh_user }}/.kube/config kubectl taint nodes --all node-role.kubernetes.io/master-

    #- shell: kubeadm token create --print-join-command
    #  become: true
    #  register: join_cmd

    #- debug: msg={{ join_cmd.stdout.split('\n')|first }}

    #- name: reset nodes
    #  shell: ssh kangaroo@{{ item.cn }}.{{ bardin_haus_vpn_domain }} sudo {{ join_cmd.stdout.split('\n')|first }} 
    #  with_items: "{{ nodes }}"

    - name: sync images
      shell: docker save {{ item[0] }} | bzip2 | ssh kangaroo@{{ item[1].cn }}.{{ bardin_haus_vpn_domain }} bash -c 'bunzip2 | docker load'
      with_nested:
        - "{{ images }}"
        - "{{ nodes }}"
